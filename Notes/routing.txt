in order to implement routing, we use react-router-dom library.

- We will use BrowserRouter to implement the routing.
    in the app component (or compoenent which we will render in root), we can write code as below.
    ______________________________________________________________________________
        import { BrowserRouter, Routes, Route } from 'react-router-dom';

        const AppLayout = () => {
            return (
                <>
                <Header />
                <BrowserRouter>
                    <Routes>
                    <Route path='/' exact element={<Body />} />
                    <Route path='/about' element={<About />} />
                    <Route path='*' element={<h1>Not Found</h1>} />
                    </Routes>
                </BrowserRouter>
                <Footer />
                </>
            );
        };


        Here, we are importing BrowserRouter Component and we can use Routes component to group the Routes\
        and inside routes component, use Route component to pass path and relevant element you want to render 
    ______________________________________________________________________________
    
    Instead of components given by react-router-dom, we can also use createBrowserRouter Function and RouterProvider [Context ]
    to implement routing. 

        const appRouter = createBrowserRouter([
        {
            path: '/',
            element: <AppLayout />,
            errorElement: <Error />,
            children: [
            {
                path: '/',
                element: <Body />,
            },
            {
                path: '/about',
                element: <About />,
            },
            {
                path: '/contact',
                element: <Contact />,
            },
            ],
        },
        ]);

        const root = ReactDOM.createRoot(document.querySelector('#root'));
        root.render(<RouterProvider router={appRouter} />);

    pass config object to createBrowserRouter fn, with path and element to render.
    for base route, add errorElement property, if no path matched, render an error component.

____________________________________________________________________________________________________________

If path started with / it will start the path from domain [ localhost:1234/]
for relative paths, dont start with '/', so that path will be constructed from the current page we are in.

we can use useParams() hook to ghet the params data. and to get the error data related to routes, we can use useRouteError() hook

____________________________________________________________________________________________________________

